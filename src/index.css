@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 218 34% 5%;
    --foreground: 210 40% 98%;

    --card: 218 34% 7%;
    --card-foreground: 210 40% 98%;

    --popover: 218 34% 7%;
    --popover-foreground: 210 40% 98%;

    --primary: 200 100% 50%;
    --primary-foreground: 218 34% 5%;

    --secondary: 217 32% 17%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217 32% 17%;
    --muted-foreground: 215 20% 65%;

    --accent: 217 32% 17%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62% 30%;
    --destructive-foreground: 210 40% 98%;

    --border: 217 32% 17%;
    --input: 217 32% 17%;
    --ring: 200 100% 50%;

    --radius: 0.5rem;

    --sidebar-background: 218 34% 6%;
    --sidebar-foreground: 210 40% 98%;
    --sidebar-primary: 200 100% 50%;
    --sidebar-primary-foreground: 218 34% 5%;
    --sidebar-accent: 217 32% 17%;
    --sidebar-accent-foreground: 210 40% 98%;
    --sidebar-border: 217 32% 17%;
    --sidebar-ring: 200 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-inter;
    background-image: 
      radial-gradient(circle at 25% 25%, rgba(0, 216, 255, 0.05) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(0, 255, 136, 0.05) 0%, transparent 50%);
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .tech-grid {
    background-image: 
      linear-gradient(rgba(0, 216, 255, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 216, 255, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
  }

  .glow-border {
    position: relative;
  }
  
  .glow-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    background: linear-gradient(45deg, transparent, rgba(0, 216, 255, 0.5), transparent);
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }

  .code-block {
    @apply bg-tech-gray-800 border border-tech-gray-700 rounded-lg p-4 font-mono text-sm;
    background-image: linear-gradient(90deg, rgba(0, 216, 255, 0.05) 0%, transparent 100%);
  }

  /* A classe .typing-animation não é mais necessária, pois o efeito de digitação agora é totalmente controlado pelo componente React TypewriterEffect. Manter a classe vazia garante que nenhum estilo residual seja aplicado. */
  .typing-animation {
  }

  @keyframes blink-cursor {
    50% {
      opacity: 0;
    }
  }

  .cursor-blink {
    animation: blink-cursor 1s step-end infinite;
  }

  /* Animações de Scroll Melhoradas */
  .scroll-animate {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .scroll-animate.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  .scroll-animate-left {
    opacity: 0;
    transform: translateX(-50px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .scroll-animate-left.animate-in {
    opacity: 1;
    transform: translateX(0);
  }

  .scroll-animate-right {
    opacity: 0;
    transform: translateX(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .scroll-animate-right.animate-in {
    opacity: 1;
    transform: translateX(0);
  }

  .scroll-animate-scale {
    opacity: 0;
    transform: scale(0.8);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .scroll-animate-scale.animate-in {
    opacity: 1;
    transform: scale(1);
  }

  /* Animações de Hover Melhoradas */
  .hover-lift {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94), 
                box-shadow 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
    will-change: transform;
    transform: translateZ(0);
  }

  .hover-lift:hover {
    transform: translateY(-8px) scale(1.02) translateZ(0);
    box-shadow: 0 15px 30px rgba(0, 216, 255, 0.15);
  }

  .hover-lift::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, transparent, rgba(0, 216, 255, 0.1), transparent);
    border-radius: inherit;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .hover-lift:hover::before {
    opacity: 1;
  }

  .hover-glow {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94),
                box-shadow 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform;
    transform: translateZ(0);
  }

  .hover-glow:hover {
    box-shadow: 0 0 30px rgba(0, 216, 255, 0.4);
    transform: scale(1.03) translateZ(0);
  }

  /* Animações de Texto Melhoradas */
  .text-reveal {
    overflow: hidden;
  }

  .text-reveal span {
    display: inline-block;
    transform: translateY(100%);
    transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .text-reveal.animate-in span {
    transform: translateY(0);
  }

  .text-reveal.animate-in span:nth-child(1) { transition-delay: 0.1s; }
  .text-reveal.animate-in span:nth-child(2) { transition-delay: 0.2s; }
  .text-reveal.animate-in span:nth-child(3) { transition-delay: 0.3s; }
  .text-reveal.animate-in span:nth-child(4) { transition-delay: 0.4s; }
  .text-reveal.animate-in span:nth-child(5) { transition-delay: 0.5s; }

  /* Animações de Cards Melhoradas */
  .card-stagger {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .card-stagger.animate-in {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  /* Garantir que cards com fade-in funcionem no mobile */
  .card-stagger.animate-fade-in {
    opacity: 1 !important;
    transform: translateY(0) scale(1) !important;
  }

  /* Garantir que animate-in funcione sempre */
  .card-stagger.animate-in {
    opacity: 1 !important;
    transform: translateY(0) scale(1) !important;
  }

  /* Animações de Loading */
  .loading-dots {
    display: inline-block;
  }

  .loading-dots::after {
    content: '';
    animation: loading-dots 1.5s infinite;
  }

  @keyframes loading-dots {
    0%, 20% { content: ''; }
    40% { content: '.'; }
    60% { content: '..'; }
    80%, 100% { content: '...'; }
  }

  /* Animações de Parallax Melhoradas */
  .parallax-bg {
    transform: translateZ(0);
    will-change: transform;
  }

  .parallax-slow {
    transform: translateY(calc(var(--scroll) * 0.1px));
  }

  .parallax-medium {
    transform: translateY(calc(var(--scroll) * 0.2px));
  }

  .parallax-fast {
    transform: translateY(calc(var(--scroll) * 0.3px));
  }

  /* Animações de Typing Melhoradas */
  .typing-animation {
    overflow: visible;
    white-space: nowrap;
  }

  /* Animações de Particles Melhoradas */
  .particles {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: linear-gradient(45deg, #00D8FF, #00FF88);
    border-radius: 50%;
    animation: float 8s ease-in-out infinite;
    opacity: 0.4;
  }

  .particle:nth-child(odd) {
    animation-duration: 10s;
    animation-delay: 2s;
  }

  .particle:nth-child(3n) {
    animation-duration: 12s;
    animation-delay: 4s;
  }

  .particle:hover {
    transform: scale(2);
    opacity: 1;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
      opacity: 0.4;
    }
    25% {
      transform: translateY(-15px) rotate(90deg);
      opacity: 0.8;
    }
    50% {
      transform: translateY(-30px) rotate(180deg);
      opacity: 0.6;
    }
    75% {
      transform: translateY(-15px) rotate(270deg);
      opacity: 0.8;
    }
  }

  /* Animações de Contadores */
  .counter-animation {
    transition: all 0.5s ease;
  }

  .counter-animation.animate-in {
    animation: countUp 2s ease-out forwards;
  }

  @keyframes countUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Efeitos de Glitch */
  .glitch {
    position: relative;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
  }

  .glitch::before {
    animation: glitch-1 0.5s infinite;
    color: #00ff00;
    z-index: -1;
  }

  .glitch::after {
    animation: glitch-2 0.5s infinite;
    color: #ff0000;
    z-index: -2;
  }

  .glitch.glitching::before,
  .glitch.glitching::after {
    opacity: 1;
  }

  @keyframes glitch-1 {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
  }

  @keyframes glitch-2 {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(2px, -2px); }
    40% { transform: translate(2px, 2px); }
    60% { transform: translate(-2px, -2px); }
    80% { transform: translate(-2px, 2px); }
  }

  /* Efeitos de Morphing */
  .morphing-bg {
    background: linear-gradient(45deg, #00D8FF, #00FF88, #00D8FF);
    background-size: 400% 400%;
    animation: morphing 8s ease infinite;
  }

  @keyframes morphing {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Efeitos de Neon */
  .neon-glow {
    /* Removido - efeito muito forte */
  }

  .neon-border {
    /* Removido - efeito muito forte */
  }

  /* Animações de SVG */
  .svg-draw-path {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: draw-svg 3s ease forwards;
  }

  @keyframes draw-svg {
    to {
      stroke-dashoffset: 0;
    }
  }

  /* Scrollbar personalizada */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(0, 216, 255, 0.1);
  }

  ::-webkit-scrollbar-thumb {
    background: linear-gradient(45deg, #00D8FF, #00FF88);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(45deg, #00FF88, #00D8FF);
  }

  /* Animação fade-in para mobile */
  .animate-fade-in {
    animation: fadeIn 0.5s ease-in-out forwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

/* Travar scroll do body quando menu mobile estiver aberto */
.body-no-scroll {
  overflow: hidden !important;
}

html, body {
  height: 100%;
  min-height: 100%;
}
